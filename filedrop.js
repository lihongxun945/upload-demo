// Generated by CoffeeScript 1.6.3
(function() {
  var filedrop;

  filedrop = function(method, arg) {
    var $area, $img, $this, SIZE, createImage, formData, selectedArea, submit;
    $this = $(this);
    $area = $this.find(".area");
    $img = void 0;
    formData = void 0;
    SIZE = [520, 380];
    selectedArea = void 0;
    createImage = function(file) {
      var createDrop, reader;
      $img = $('<img />');
      reader = new FileReader();
      reader.onload = function(e) {
        return $img.attr('src', e.target.result);
      };
      reader.readAsDataURL(file);
      $area.empty();
      $img.appendTo($area);
      createDrop = function() {
        var $crop, height, naturalHeight, naturalWidth, ratio, select, width;
        height = $img.height();
        width = $img.width();
        naturalHeight = $img.prop('naturalHeight');
        naturalWidth = $img.prop('naturalWidth');
        ratio = height / naturalHeight;
        if (!(naturalWidth > SIZE[0]) || !(naturalHeight > SIZE[1])) {
          $img.replaceWith("<span>图片大小必须大于" + SIZE[0] + "*" + SIZE[1] + "</span>");
          return;
        }
        select = [0, 0, SIZE[0] * ratio, SIZE[1] * ratio];
        select[0] = (width - select[2]) / 2;
        select[1] = (height - select[3]) / 2;
        return $crop = $img.Jcrop({
          allowMove: true,
          setSelect: select,
          aspectRatio: 26 / 19,
          onSelect: function(c) {
            selectedArea = {
              x: Math.round(c.x / ratio),
              y: Math.round(c.y / ratio),
              width: Math.round(c.w / ratio),
              height: Math.round(c.h / ratio)
            };
            $this.find(".crop-x").html(selectedArea.x);
            $this.find(".crop-y").html(selectedArea.y);
            $this.find(".crop-w").html(selectedArea.width);
            return $this.find(".crop-h").html(selectedArea.height);
          }
        });
      };
      return setTimeout(createDrop, 100);
    };
    submit = function() {
      formData.append('x-gmkerl-crop', JSON.stringify(selectedArea));
      formData.append('x-gmkerl-thumbnail', 'your-thumbnail-name');
      formData.append('x-gmkerl-type', JSON.stringify({
        fix_scale: 50
      }));
      return $.ajax({
        url: $this.data("url"),
        data: formData,
        processData: false,
        contentType: false,
        type: 'POST',
        success: function(data) {
          return alert(data);
        }
      });
    };
    $area.on("dragover", function(e) {
      e.preventDefault();
      return e.stopPropagation();
    });
    $area.on("drop", function(e) {
      var files;
      e.preventDefault();
      files = e.originalEvent.dataTransfer.files;
      createImage(files[0]);
      formData = new FormData();
      return formData.append("files", files[0]);
    });
    $this.find(".submit").click(submit);
    return $this;
  };

  $.fn.extend({
    croper: function(method, arg) {
      return $(this).each(function() {
        return filedrop.call(this, method, arg);
      });
    }
  });

  $(".file-drop").croper();

}).call(this);
